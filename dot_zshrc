# load zgenom
source "${HOME}/.zgenom/zgenom.zsh"

# Check for plugin and zgenom updates every 7 days
# This does not increase the startup time.
zgenom autoupdate

# create the function directory if it doesn't exist
if [ ! -d "$HOME/.zsh/function" ]; then
    mkdir -p "$HOME/.zsh/function"
fi

export LANG=en_US.UTF-8
export EDITOR='nvim'
export GOPATH="$HOME/go"
export PATH="$HOME/.local/bin:$HOME/.cargo/bin:$PATH"
export FPATH="$HOME/.zsh/function:$FPATH"
export BAT_THEME="Catppuccin-mocha"

# if the init script doesn't exist
if ! zgenom saved; then
    echo "Creating a zgenom save"

    # Add this if you experience issues with missing completions or errors mentioning compdef.
    zgenom compdef

    # Ohmyzsh base library
    zgenom ohmyzsh
    zgenom ohmyzsh plugins/sudo
    zgenom ohmyzsh plugins/git
    zgenom ohmyzsh plugins/asdf
    zgenom ohmyzsh plugins/tmux
    [[ "$(uname -s)" = Darwin ]] && zgenom ohmyzsh plugins/macos
    [[ "$(uname -s)" = Darwin ]] && zgenom ohmyzsh plugins/gnu-utils

    zgenom ohmyzsh --completion plugins/docker-compose

    # bulk load
    zgenom loadall <<EOPLUGINS
    zsh-users/zsh-syntax-highlighting
    redxtech/zsh-asdf-direnv
EOPLUGINS

    zgenom load catppuccin/zsh-syntax-highlighting themes/catppuccin_mocha-zsh-syntax-highlighting.zsh
    zgenom load ogham/exa completions/zsh/ --completions

    # save all to init script
    zgenom save

    # Compile your zsh files
    zgenom compile "$HOME/.zshrc"
    zgenom compile $ZDOTDIR
fi

alias vzsh="chezmoi edit --apply ~/.zshrc"
alias vtmux="chezmoi edit --apply ~/.tmux.conf"
alias vv="chezmoi edit --apply ~/.config/nvim/init.vim"
alias vala="chezmoi edit --apply ~/.config/alacritty/alacritty.yml"
alias vstar="chezmoi edit --apply ~/.config/starship.toml"
alias czcd="chezmoi cd"
alias czup="chezmoi update"
alias vim="nvim"
alias reload="source ~/.zshrc"

# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME/.google-cloud-sdk/path.zsh.inc" ]; then . "$HOME/.google-cloud-sdk/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "$HOME/.google-cloud-sdk/completion.zsh.inc" ]; then . "$HOME/.google-cloud-sdk/completion.zsh.inc"; fi

# Replace unix cli by rust alternatives
if type "exa" > /dev/null; then
    alias ls="exa --icons -1"
    compdef ls=exa
    alias ll"exa --icons --long"
    compdef ll=exa
    alias la"exa --icons --long -a"
    compdef ll=exa
    alias tree="exa -T --icons --git-ignore"
    compdef tree=exa
    alias tra="exa -T --icons --git-ignore -a"
    compdef tra=exa
fi

if type "bat" > /dev/null; then
    alias cat="bat"
    compdef cat=bat
fi

if type "fd" > /dev/null; then
    alias find="fd"
    compdef find=fd
fi

if type "rg" > /dev/null; then
    alias grep="rg"
    compdef grep=rg
fi

if type "sd" > /dev/null; then
    alias sed="sd"
    # compdef sed=sd sd doesn't have a completion
fi

if type "procs" > /dev/null; then
    # zsh completion is created if doesn't exist
    if [ ! -f ~/.zsh/function/_procs ]; then
        procs --completion-out zsh > ~/.zsh/function/_procs
    fi

    alias ps="procs"
    compdef ps=procs
fi

if type "duf" > /dev/null; then
    alias df="duf"
    compdef df=duf
fi

if type "zoxide" > /dev/null; then
    eval "$(zoxide init zsh --cmd cd)"
fi

if type "starship" > /dev/null; then
    eval "$(starship init zsh)"
fi
